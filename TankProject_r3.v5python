{"mode":"Text","textContent":"vexcode_brain_precision = 0\nvexcode_console_precision = 0\nvexcode_controller_1_precision = 0\nLeftVelo = 0\nRightVelo = 0\nprintPeriodic = 0\n\n\n\ndef when_started1():\n    global LeftVelo, printPeriodic, RightVelo, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n\n    printPeriodic = 0\n    RightVelo = 0\n    LeftVelo = 0\n\n    # Setup lift positions and defaults\n    liftM6.set_velocity(50, PERCENT)\n    #Array of posistions that the lift motor can be at\n    liftPostions = [0,400,600]\n    LiftPosi = 0\n    #Reseting motors to think it's at 0\n    liftM6.set_position(0, DEGREES)\n\n    # Main loop\n    while True:\n        #Set drive motor group velocities based on axis 1 and 2\n        LeftVelo = controller_1.axis2.position() + controller_1.axis1.position()\n        RightVelo = controller_1.axis2.position() - controller_1.axis1.position()\n\n        leftMG.set_velocity(LeftVelo, PERCENT)\n        rightMG.set_velocity(RightVelo, PERCENT)\n\n        #Spin drive motors as requested\n\n        leftMG.spin(FORWARD)\n        rightMG.spin(FORWARD)\n\n        \n\n        if controller_1.buttonR1.pressing() and (LiftPosi < len(liftPostions)-1): # and liftM6.is_done():\n            #presses up button goes to goes the next higher posistion in array\n            LiftPosi =  LiftPosi + 1\n            \n            #Calating how far the motor has to move\n            liftdegrees = liftPostions[LiftPosi]-liftM6.position(DEGREES)\n            liftM6.spin_for(FORWARD, liftdegrees, DEGREES, wait=False)\n\n        if controller_1.buttonR2.pressing()  and LiftPosi > 0:   # and liftM6.is_done():\n            #presses down button goes to next lower posistion\n            LiftPosi =  LiftPosi - 1\n\n            #Calating how far the motor has to move\n            liftdegrees = liftPostions[LiftPosi]-liftM6.position(DEGREES)\n            liftM6.spin_for(FORWARD, liftdegrees, DEGREES, wait=False)\n            \n\n\n        # Print to the brain once ever 200 loops or approximately once a sec\n        if printPeriodic > 200:\n            brain.screen.clear_screen()\n            brain.screen.set_cursor(1,1)\n            #Disp is a dictionary of elements to print to the brain\n            disp = {\"LeftVelo\":LeftVelo,\"RightVelo\":RightVelo,\"liftM6Velo\":liftM6.velocity(PERCENT),\"LiftPosi\":LiftPosi,\"liftM6Pos\":liftM6.position(DEGREES)}\n\n            for label, amount in disp.items():\n\n                print(label + ':' + str(amount))\n                \n                brain.screen.print(x + ':' + str(y) , precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n                brain.screen.next_row()\n\n            printPeriodic = 0\n        else:\n            printPeriodic = printPeriodic + 1\n\n\n\n        wait(5, MSEC)\n\nwhen_started1()\n\n\n\n\n\n","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","setting":{"left":"","leftDir":"true","right":"","rightDir":"false","upDown":"","upDownDir":"true","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1,9],"name":"leftMG","customName":true,"deviceType":"MotorGroup","setting":{"fwd":"forward","rev":"reverse","gear":"ratio36_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[13,20],"name":"rightMG","customName":true,"deviceType":"MotorGroup","setting":{"fwd":"forward","rev":"reverse","gear":"ratio36_1","motor_a_reversed":"false","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[6],"name":"liftM6","customName":true,"deviceType":"Motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20210708.10.00.00","appVersion":"2.0.8","fileFormat":"1.0.0","icon":""}